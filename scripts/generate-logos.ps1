# PowerShell script ƒë·ªÉ resize logo kh√¥ng c·∫ßn ImageMagick hay Sharp
# S·ª≠ d·ª•ng .NET System.Drawing ƒë·ªÉ resize images

param(
    [string]$InputFile = "public\images\logo.png",
    [string]$OutputDir = "public\images"
)

# Ki·ªÉm tra file logo c√≥ t·ªìn t·∫°i kh√¥ng
if (-not (Test-Path $InputFile)) {
    Write-Host "‚ùå Kh√¥ng t√¨m th·∫•y $InputFile" -ForegroundColor Red
    Write-Host "üì• Vui l√≤ng copy logo.png v√†o th∆∞ m·ª•c public\images" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ T√¨m th·∫•y logo.png!" -ForegroundColor Green
Write-Host "üé® ƒêang t·∫°o c√°c k√≠ch th∆∞·ªõc logo b·∫±ng PowerShell..." -ForegroundColor Cyan

# Load .NET assemblies for image processing
Add-Type -AssemblyName System.Drawing

try {
    # Load original image
    $originalImage = [System.Drawing.Image]::FromFile((Resolve-Path $InputFile).Path)
    
    Write-Host "üìä K√≠ch th∆∞·ªõc g·ªëc: $($originalImage.Width)x$($originalImage.Height)" -ForegroundColor Blue
    
    # Danh s√°ch sizes c·∫ßn t·∫°o
    $sizes = @(
        @{Width=16; Height=16; Name="logo-16.png"},
        @{Width=32; Height=32; Name="logo-32.png"},
        @{Width=48; Height=48; Name="logo-48.png"},
        @{Width=72; Height=72; Name="logo-72.png"},
        @{Width=96; Height=96; Name="logo-96.png"},
        @{Width=120; Height=120; Name="logo-120.png"},
        @{Width=144; Height=144; Name="logo-144.png"},
        @{Width=152; Height=152; Name="logo-152.png"},
        @{Width=180; Height=180; Name="logo-180.png"},
        @{Width=192; Height=192; Name="logo-192.png"}
    )
    
    foreach ($size in $sizes) {
        $outputPath = Join-Path $OutputDir $size.Name
        
        # Create new bitmap with target size
        $newImage = New-Object System.Drawing.Bitmap($size.Width, $size.Height)
        $graphics = [System.Drawing.Graphics]::FromImage($newImage)
        
        # Set high quality settings
        $graphics.InterpolationMode = [System.Drawing.Drawing2D.InterpolationMode]::HighQualityBicubic
        $graphics.SmoothingMode = [System.Drawing.Drawing2D.SmoothingMode]::HighQuality
        $graphics.PixelOffsetMode = [System.Drawing.Drawing2D.PixelOffsetMode]::HighQuality
        $graphics.CompositingQuality = [System.Drawing.Drawing2D.CompositingQuality]::HighQuality
        
        # Draw resized image
        $graphics.DrawImage($originalImage, 0, 0, $size.Width, $size.Height)
        
        # Save as PNG
        $newImage.Save($outputPath, [System.Drawing.Imaging.ImageFormat]::Png)
        
        # Cleanup
        $graphics.Dispose()
        $newImage.Dispose()
        
        Write-Host "‚úÖ T·∫°o $($size.Name) ($($size.Width)x$($size.Height))" -ForegroundColor Green
    }
    
    # Cleanup original image
    $originalImage.Dispose()
    
    Write-Host "üéâ Ho√†n th√†nh! ƒê√£ t·∫°o t·∫•t c·∫£ logo sizes." -ForegroundColor Green
    Write-Host "üìÅ Files ƒë∆∞·ª£c t·∫°o trong $OutputDir" -ForegroundColor Blue
    
    # List created files
    Get-ChildItem -Path $OutputDir -Filter "logo-*.png" | ForEach-Object {
        Write-Host "   ‚úì $($_.Name)" -ForegroundColor White
    }
    
    Write-Host ""
    Write-Host "üí° L∆∞u √Ω: ƒê·ªÉ t·∫°o favicon.ico, s·ª≠ d·ª•ng online tool:" -ForegroundColor Yellow
    Write-Host "   https://convertio.co/png-ico/" -ForegroundColor Cyan
    
} catch {
    Write-Host "‚ùå L·ªói khi x·ª≠ l√Ω ·∫£nh: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "üí° Th·ª≠ c√°c alternatives kh√°c:" -ForegroundColor Yellow
    Write-Host "   1. Online tools: https://favicon.io/favicon-converter/" -ForegroundColor Cyan
    Write-Host "   2. C√†i ImageMagick: https://imagemagick.org/script/download.php#windows" -ForegroundColor Cyan
}
