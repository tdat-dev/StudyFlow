import { generateTutorResponse } from './tutor';
import { ChatTurn } from './prompts';

export interface AISuggestion {
  id: string;
  title: string;
  prompt: string;
  category: string;
  icon?: string;
}

/**
 * Generates AI-powered suggestions based on context
 */
export async function generateAISuggestions(
  context: {
    userLevel?: 'beginner' | 'intermediate' | 'advanced';
    recentTopics?: string[];
    chatHistory?: ChatTurn[];
    timeOfDay?: 'morning' | 'afternoon' | 'evening';
    studyGoals?: string[];
  } = {},
): Promise<AISuggestion[]> {
  const suggestionsPrompt = buildSuggestionsPrompt(context);

  try {
    const response = await generateTutorResponse(suggestionsPrompt, []);
    return parseSuggestionsResponse(response);
  } catch (error) {
    console.error('Failed to generate AI suggestions:', error);
    return getFallbackSuggestions();
  }
}

function buildSuggestionsPrompt(_context: any): string {
  const currentTime = new Date();
  const hour = currentTime.getHours();
  const timeOfDay = hour < 12 ? 'morning' : hour < 18 ? 'afternoon' : 'evening';

  const basePrompt = `ü§ñ B·∫°n l√† AI Suggestion Generator cho StudyFlow - ·ª©ng d·ª•ng h·ªçc t·∫≠p th√¥ng minh.

üéØ NHI·ªÜM V·ª§: T·∫°o 6 g·ª£i √Ω h·ªçc t·∫≠p th√¥ng minh v√† ph√π h·ª£p v·ªõi th·ªùi ƒëi·ªÉm hi·ªán t·∫°i.

‚è∞ B·ªêI C·∫¢NH:
- Th·ªùi gian: ${timeOfDay === 'morning' ? 'Bu·ªïi s√°ng - nƒÉng l∆∞·ª£ng cao' : timeOfDay === 'afternoon' ? 'Bu·ªïi chi·ªÅu - t·∫≠p trung h·ªçc t·∫≠p' : 'Bu·ªïi t·ªëi - √¥n t·∫≠p v√† c·ªßng c·ªë'}
- Ng√†y: ${currentTime.toLocaleDateString('vi-VN', { weekday: 'long' })}

üìã Y√äU C·∫¶U FORMAT (JSON):
Tr·∫£ v·ªÅ CH√çNH X√ÅC format JSON sau (kh√¥ng th√™m text g√¨ kh√°c):

{
  "suggestions": [
    {
      "id": "unique-id",
      "title": "Ti√™u ƒë·ªÅ ng·∫Øn g·ªçn (t·ªëi ƒëa 30 k√Ω t·ª±)",
      "prompt": "C√¢u prompt chi ti·∫øt ƒë·ªÉ g·ª≠i cho AI",
      "category": "math|literature|science|english|history|other",
      "icon": "üìö|üßÆ|üî¨|üá¨üáß|üìú|üí°"
    }
  ]
}

üé® NGUY√äN T·∫ÆC T·∫†O G·ª¢I √ù:
1. ƒêA D·∫†NG ch·ªß ƒë·ªÅ: To√°n, VƒÉn, Anh, Khoa h·ªçc, L·ªãch s·ª≠
2. PH√ô H·ª¢P th·ªùi gian: ${timeOfDay === 'morning' ? 'B√†i t·∫≠p kh·ªüi ƒë·ªông tr√≠ n√£o' : timeOfDay === 'afternoon' ? 'Luy·ªán t·∫≠p chuy√™n s√¢u' : '√în t·∫≠p ki·∫øn th·ª©c'}
3. TH·ª∞C T·∫æ v√† H·ªÆU √çCH: Gi·∫£i b√†i t·∫≠p c·ª• th·ªÉ, gi·∫£i th√≠ch kh√°i ni·ªám
4. NG·∫ÆN G·ªåN: Title t·ªëi ƒëa 30 k√Ω t·ª±
5. CHI TI·∫æT: Prompt r√µ r√†ng, c·ª• th·ªÉ

üí° V√ç D·ª§ THEO TH·ªúI GIAN:
${getTimeBasedExamples(timeOfDay)}`;

  return basePrompt;
}

function getTimeBasedExamples(timeOfDay: string): string {
  switch (timeOfDay) {
    case 'morning':
      return `- "B√†i to√°n kh·ªüi ƒë·ªông" ‚Üí "Cho t√¥i 3 b√†i to√°n ƒë·ªë vui ƒë·ªÉ kh·ªüi ƒë·ªông tr√≠ n√£o bu·ªïi s√°ng"
- "T·ª´ v·ª±ng m·ªõi h√¥m nay" ‚Üí "D·∫°y t√¥i 5 t·ª´ v·ª±ng ti·∫øng Anh m·ªõi v·ªÅ ch·ªß ƒë·ªÅ c√¥ng ngh·ªá"
- "C√¢u h·ªèi khoa h·ªçc" ‚Üí "T·∫°i sao b·∫ßu tr·ªùi m√†u xanh? Gi·∫£i th√≠ch ƒë∆°n gi·∫£n"`;

    case 'afternoon':
      return `- "Gi·∫£i ph∆∞∆°ng tr√¨nh" ‚Üí "H∆∞·ªõng d·∫´n gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c 2: x¬≤ - 5x + 6 = 0"
- "Ph√¢n t√≠ch vƒÉn b·∫£n" ‚Üí "Ph√¢n t√≠ch ƒëo·∫°n th∆° ƒë·∫ßu trong 'Tr√†ng giang' c·ªßa Huy C·∫≠n"
- "Luy·ªán speaking" ‚Üí "T·∫°o cu·ªôc h·ªôi tho·∫°i ti·∫øng Anh v·ªÅ ch·ªß ƒë·ªÅ m√¥i tr∆∞·ªùng"`;

    case 'evening':
      return `- "√în l·∫°i ng·ªØ ph√°p" ‚Üí "T√≥m t·∫Øt c√°c th√¨ trong ti·∫øng Anh v·ªõi v√≠ d·ª•"
- "C√¥ng th·ª©c v·∫≠t l√Ω" ‚Üí "Li·ªát k√™ v√† gi·∫£i th√≠ch 5 c√¥ng th·ª©c v·∫≠t l√Ω quan tr·ªçng l·ªõp 10"
- "T√≥m t·∫Øt l·ªãch s·ª≠" ‚Üí "T√≥m t·∫Øt s·ª± ki·ªán quan tr·ªçng trong chi·∫øn tranh Vi·ªát Nam"`;

    default:
      return '';
  }
}

function parseSuggestionsResponse(response: string): AISuggestion[] {
  try {
    // T√¨m JSON trong response
    const jsonMatch = response.match(/\{[\s\S]*\}/);
    if (!jsonMatch) {
      throw new Error('No JSON found in response');
    }

    const parsed = JSON.parse(jsonMatch[0]);

    if (!parsed.suggestions || !Array.isArray(parsed.suggestions)) {
      throw new Error('Invalid suggestions format');
    }

    return parsed.suggestions
      .slice(0, 6)
      .map((suggestion: any, index: number) => ({
        id: suggestion.id || `ai-suggestion-${index}`,
        title: suggestion.title || 'C√¢u h·ªèi th√∫ v·ªã',
        prompt: suggestion.prompt || suggestion.title,
        category: suggestion.category || 'other',
        icon: suggestion.icon || 'üí°',
      }));
  } catch (error) {
    console.error('Failed to parse AI suggestions:', error);
    return getFallbackSuggestions();
  }
}

function getFallbackSuggestions(): AISuggestion[] {
  const currentTime = new Date();
  const hour = currentTime.getHours();

  if (hour < 12) {
    // Bu·ªïi s√°ng - kh·ªüi ƒë·ªông
    return [
      {
        id: 'morning-1',
        title: 'B√†i to√°n kh·ªüi ƒë·ªông',
        prompt: 'Cho t√¥i 3 b√†i to√°n ƒë·ªë vui ƒë·ªÉ kh·ªüi ƒë·ªông tr√≠ n√£o bu·ªïi s√°ng',
        category: 'math',
        icon: 'üßÆ',
      },
      {
        id: 'morning-2',
        title: 'T·ª´ v·ª±ng m·ªõi h√¥m nay',
        prompt: 'D·∫°y t√¥i 5 t·ª´ v·ª±ng ti·∫øng Anh m·ªõi v·ªÅ ch·ªß ƒë·ªÅ c√¥ng ngh·ªá',
        category: 'english',
        icon: 'üá¨üáß',
      },
      {
        id: 'morning-3',
        title: 'T·∫°i sao...?',
        prompt: 'T·∫°i sao b·∫ßu tr·ªùi m√†u xanh? Gi·∫£i th√≠ch m·ªôt c√°ch ƒë∆°n gi·∫£n',
        category: 'science',
        icon: 'üî¨',
      },
      {
        id: 'morning-4',
        title: 'Th√†nh ng·ªØ hay',
        prompt:
          'Gi·∫£i th√≠ch √Ω nghƒ©a v√† c√°ch d√πng th√†nh ng·ªØ "N∆∞·ªõc ƒë·∫øn ch√¢n m·ªõi nh·∫£y"',
        category: 'literature',
        icon: 'üìö',
      },
      {
        id: 'morning-5',
        title: 'S·ª± ki·ªán l·ªãch s·ª≠',
        prompt: 'K·ªÉ v·ªÅ m·ªôt s·ª± ki·ªán l·ªãch s·ª≠ th√∫ v·ªã di·ªÖn ra v√†o ng√†y h√¥m nay',
        category: 'history',
        icon: 'üìú',
      },
      {
        id: 'morning-6',
        title: 'M·∫πo h·ªçc t·∫≠p',
        prompt: 'Chia s·∫ª 3 m·∫πo h·ªçc t·∫≠p hi·ªáu qu·∫£ cho bu·ªïi s√°ng',
        category: 'other',
        icon: 'üí°',
      },
    ];
  } else if (hour < 18) {
    // Bu·ªïi chi·ªÅu - h·ªçc t·∫≠p chuy√™n s√¢u
    return [
      {
        id: 'afternoon-1',
        title: 'Gi·∫£i ph∆∞∆°ng tr√¨nh',
        prompt: 'H∆∞·ªõng d·∫´n gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c 2: x¬≤ - 5x + 6 = 0 t·ª´ng b∆∞·ªõc',
        category: 'math',
        icon: 'üßÆ',
      },
      {
        id: 'afternoon-2',
        title: 'Grammar Focus',
        prompt:
          'Gi·∫£i th√≠ch s·ª± kh√°c bi·ªát gi·ªØa Present Perfect v√† Past Simple v·ªõi v√≠ d·ª•',
        category: 'english',
        icon: 'üá¨üáß',
      },
      {
        id: 'afternoon-3',
        title: 'Ph√¢n t√≠ch vƒÉn b·∫£n',
        prompt: 'Ph√¢n t√≠ch ƒëo·∫°n th∆° ƒë·∫ßu trong "Tr√†ng giang" c·ªßa Huy C·∫≠n',
        category: 'literature',
        icon: 'üìö',
      },
      {
        id: 'afternoon-4',
        title: 'Th√≠ nghi·ªám khoa h·ªçc',
        prompt: 'Gi·∫£i th√≠ch nguy√™n l√Ω ho·∫°t ƒë·ªông c·ªßa pin lithium-ion',
        category: 'science',
        icon: 'üî¨',
      },
      {
        id: 'afternoon-5',
        title: 'Chi·∫øn tranh th·∫ø gi·ªõi',
        prompt:
          'Ph√¢n t√≠ch nguy√™n nh√¢n v√† h·∫≠u qu·∫£ c·ªßa Chi·∫øn tranh th·∫ø gi·ªõi th·ª© 2',
        category: 'history',
        icon: 'üìú',
      },
      {
        id: 'afternoon-6',
        title: 'K·ªπ nƒÉng t∆∞ duy',
        prompt: 'H∆∞·ªõng d·∫´n √°p d·ª•ng t∆∞ duy ph√™ ph√°n trong h·ªçc t·∫≠p',
        category: 'other',
        icon: 'üí°',
      },
    ];
  } else {
    // Bu·ªïi t·ªëi - √¥n t·∫≠p
    return [
      {
        id: 'evening-1',
        title: '√în c√¥ng th·ª©c to√°n',
        prompt: 'T√≥m t·∫Øt c√°c c√¥ng th·ª©c to√°n quan tr·ªçng l·ªõp 12 k√®m v√≠ d·ª•',
        category: 'math',
        icon: 'üßÆ',
      },
      {
        id: 'evening-2',
        title: 'Review ng·ªØ ph√°p',
        prompt: '√în t·∫≠p t·∫•t c·∫£ c√°c th√¨ trong ti·∫øng Anh v·ªõi v√≠ d·ª• c·ª• th·ªÉ',
        category: 'english',
        icon: 'üá¨üáß',
      },
      {
        id: 'evening-3',
        title: '√în vƒÉn h·ªçc',
        prompt: 'T√≥m t·∫Øt ƒë·∫∑c ƒëi·ªÉm c·ªßa c√°c tr√†o l∆∞u vƒÉn h·ªçc Vi·ªát Nam',
        category: 'literature',
        icon: 'üìö',
      },
      {
        id: 'evening-4',
        title: 'C√¥ng th·ª©c v·∫≠t l√Ω',
        prompt: 'Li·ªát k√™ 10 c√¥ng th·ª©c v·∫≠t l√Ω quan tr·ªçng nh·∫•t l·ªõp 11',
        category: 'science',
        icon: 'üî¨',
      },
      {
        id: 'evening-5',
        title: 'Timeline l·ªãch s·ª≠',
        prompt: 'T·∫°o timeline c√°c s·ª± ki·ªán quan tr·ªçng trong l·ªãch s·ª≠ Vi·ªát Nam',
        category: 'history',
        icon: 'üìú',
      },
      {
        id: 'evening-6',
        title: 'K·∫ø ho·∫°ch ng√†y mai',
        prompt: 'T∆∞ v·∫•n l·∫≠p k·∫ø ho·∫°ch h·ªçc t·∫≠p hi·ªáu qu·∫£ cho ng√†y mai',
        category: 'other',
        icon: 'üí°',
      },
    ];
  }
}
